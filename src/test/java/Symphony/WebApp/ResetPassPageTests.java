/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Symphony.WebApp;

import org.junit.Test;

import com.symphony.framework.BrowserStrategy;
import com.symphony.helpers.Constants.Valid;
import com.symphony.page.ResetPasswordObject;
import com.symphony.page.SignInObject;
import org.openqa.selenium.WebDriver;

import static org.junit.Assert.*;

import org.junit.After;
import org.junit.Before;

public class ResetPassPageTests {
	public BrowserStrategy browser;
	public SignInObject signInPage;
	public ResetPasswordObject resetPasswordPage;
	public WebDriver webdriver;
	
	@Before
	public void preconditions() throws Exception {
		browser = new BrowserStrategy(System.getProperty("browser"));
		webdriver = browser.getDriver();
    	signInPage = new SignInObject(webdriver);
    	resetPasswordPage = new ResetPasswordObject(webdriver);
	}
	
    @Test 
    public void Should_DisplayToInputEmail_When_FillingInvalidEmail() throws Exception {
    	resetPasswordPage.open();
    	resetPasswordPage.enterEmail("invalid");
    	resetPasswordPage.submit();
    	assertEquals(resetPasswordPage.getSystemMessage(), "An e-mail address is required.");
    }
    
    @Test 
    public void Should_DisplayToCheckCaptcha_When_FillingValidEmailAndConfirming() throws Exception {
    	resetPasswordPage.open();
    	resetPasswordPage.enterEmail(Valid.EMAIL);
    	resetPasswordPage.submit();
    	assertEquals(resetPasswordPage.getSystemMessage(), "Please fill in the Captcha first.");
    }
    
    @Test 
    public void Should_DisplaySignInPage_When_ClickingOnCancel() throws Exception {
    	resetPasswordPage.open();
    	resetPasswordPage.clickCancelLink();
    	assertTrue(signInPage.verifyPageUrl());
    }
    
    @After
    public void cleanUp() {
    	webdriver.close();
    }
    
}
