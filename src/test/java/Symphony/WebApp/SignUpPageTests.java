/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Symphony.WebApp;

import org.junit.Test;

import com.symphony.framework.BrowserStrategy;
import com.symphony.helpers.ReceiveSmsObject;
import com.symphony.helpers.TempEmailObject;
import com.symphony.page.ResetPasswordObject;
import com.symphony.page.SignInObject;
import com.symphony.page.SignUpObject;
import static com.symphony.helpers.Constants.Valid;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.support.ui.WebDriverWait;

import static org.junit.Assert.*;

import org.junit.After;
import org.junit.Before;

public class SignUpPageTests {
	
	public BrowserStrategy browser;
	public SignInObject signInPage;
	public SignUpObject signUpPage;
	public ResetPasswordObject resetPasswordPage;
	public WebDriver webdriver;

	@Before
	public void preconditions() throws Exception {
		browser = new BrowserStrategy(System.getProperty("browser"));
		webdriver = browser.getDriver();
		signInPage = new SignInObject(webdriver);
		signUpPage = new SignUpObject(webdriver);
	}

	@Test
	public void Should_CheckAllSecurityChecks_When_FillingAValidPassword() throws Exception {
		signUpPage.open();
		signUpPage.setSignUpWithYourPassword(Valid.PASSWORD);
		assertTrue(signUpPage.getLowercaseEnabled().isDisplayed());
		assertTrue(signUpPage.getUppercaseEnabled().isDisplayed());
		assertTrue(signUpPage.getNumberEnabled().isDisplayed());
		assertTrue(signUpPage.getSpecialcaseEnabled().isDisplayed());
	}

	@Test
	public void Should_CheckLowerCase_When_FillingAValidAndInvalidPassword() throws Exception {
		signUpPage.open();
		signUpPage.setSignUpWithYourPassword("INVALID");
		assertTrue(signUpPage.getLowercaseDisabled().isDisplayed());
		signUpPage.setSignUpWithYourPassword(Valid.PASSWORD);
		assertTrue(signUpPage.getLowercaseEnabled().isDisplayed());
	}

	@Test
	public void Should_CheckUpperCase_When_FillingAValidAndInvalidPassword() throws Exception {
		signUpPage.open();
		signUpPage.setSignUpWithYourPassword("invalid");
		assertTrue(signUpPage.getUppercaseDisabled().isDisplayed());
		signUpPage.setSignUpWithYourPassword(Valid.PASSWORD);
		assertTrue(signUpPage.getUppercaseEnabled().isDisplayed());
	}

	@Test
	public void Should_CheckNumberCase_When_FillingAValidAndInvalidPassword() throws Exception {
		signUpPage.open();
		signUpPage.setSignUpWithYourPassword("invalid");
		assertTrue(signUpPage.getNumberDisabled().isDisplayed());
		signUpPage.setSignUpWithYourPassword(Valid.PASSWORD);
		assertTrue(signUpPage.getNumberEnabled().isDisplayed());
	}

	@Test
	public void Should_CheckSpecialCase_When_FillingAValidAndInvalidPassword() throws Exception {
		signUpPage.open();
		signUpPage.setSignUpWithYourPassword("invalid");
		assertTrue(signUpPage.getSpecialcaseDisabled().isEnabled());
		signUpPage.setSignUpWithYourPassword(Valid.PASSWORD);
		assertTrue(signUpPage.getSpecialcaseEnabled().isDisplayed());
	}

	@Test
	public void Should_NotProceedToSecondScreen_When_FillingValidValuesAndInvalidPassword() throws Exception {
		signUpPage.open();
		signUpPage.setSignUpWithYourFirstName(Valid.FIRST_NAME);
		signUpPage.setSignUpWithYourLastName(Valid.LAST_NAME);
		signUpPage.setSignUpWithYourEmail(Valid.EMAIL);
		assertTrue(signUpPage.getNextInvalid().isDisplayed());
		signUpPage.setSignUpWithYourPassword("invalid");
		assertTrue(signUpPage.getNextInvalid().isDisplayed());
	}

	@Test
	public void Should_NotProceedToSecondScreen_When_FillingValidValuesAndInvalidFirstName() throws Exception {
		signUpPage.open();
		signUpPage.setSignUpWithYourFirstName("");
		signUpPage.setSignUpWithYourLastName(Valid.LAST_NAME);
		signUpPage.setSignUpWithYourEmail(Valid.EMAIL);
		signUpPage.setSignUpWithYourPassword(Valid.PASSWORD);
		assertTrue(signUpPage.getNextInvalid().isDisplayed());
	}
	
	@Test
	public void Should_NotProceedToSecondScreen_When_FillingValidValuesAndInvalidLastName() throws Exception {
		signUpPage.open();
		signUpPage.setSignUpWithYourFirstName(Valid.FIRST_NAME);
		signUpPage.setSignUpWithYourLastName("");
		signUpPage.setSignUpWithYourEmail(Valid.EMAIL);
		signUpPage.setSignUpWithYourPassword(Valid.PASSWORD);
		assertTrue(signUpPage.getNextInvalid().isDisplayed());
	}
	
	@Test
	public void Should_NotProceedToSecondScreen_When_FillingValidValuesAndInvalidEmail() throws Exception {
		signUpPage.open();
		signUpPage.setSignUpWithYourFirstName(Valid.FIRST_NAME);
		signUpPage.setSignUpWithYourLastName(Valid.LAST_NAME);
		signUpPage.setSignUpWithYourEmail("");
		signUpPage.setSignUpWithYourPassword(Valid.PASSWORD);
		assertTrue(signUpPage.getNextInvalid().isDisplayed());
		signUpPage.setSignUpWithYourEmail("invalidemail.com");
		assertTrue(signUpPage.getNextInvalid().isDisplayed());
	}
	
	
	@After
	public void cleanUp() {
		webdriver.close();
	}

}
